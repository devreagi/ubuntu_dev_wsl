---
- block:
    - name: create local fonts directory
      ansible.builtin.file:
        path: "~{{ local_username }}/.local/share/fonts"
        state: directory
  become: true
  become_user: "{{ local_username }}"

- block:
    - name: download nerd fonts to local fonts folder
      ansible.builtin.get_url:
        url: "{{ item  }}"
        dest: "~{{ local_username }}/.local/share/fonts/"
      with_items: "{{ terminal_customizations_nerd_fonts }}"
  become: true
  become_user: "{{ local_username }}"

- name: refresh fonts cache
  ansible.builtin.shell: "fc-cache -fv"
  become: true
  become_user: "{{ local_username }}"

# setup tmux configs and plugins
- block:
    - name: git clone tmux plugin repo
      ansible.builtin.git:
        repo: "{{ terminal_customizations_tmux_plugin_repo }}"
        dest: "~{{ local_username }}/.tmux/plugins/tpm"
        clone: true
        version: master

    - name: check if .tmux.conf exists in user's home dir
      ansible.builtin.stat:
        path: "~{{ local_username }}/.tmux.conf"
      register: dottmuxdotconf

    - name: backup .tmux.conf if it exists
      ansible.builtin.copy:
        src: "~{{ local_username }}/.tmux.conf"
        dest: "~{{ local_username }}/.tmux.conf.orig"
      when: dottmuxdotconf.stat.exists

    - name: copy the sample .tmux.conf file
      ansible.builtin.copy:
        src: .tmux.conf
        dest: "~{{ local_username }}/.tmux.conf"
        force: true
        mode: "0644"

    - name: install all required tmux plugins
      ansible.builtin.shell: |
        export TMUX_PLUGIN_MANAGER_PATH="~{{ local_username }}/.tmux/plugins/"
        sleep 1  # Ensure .tmux.conf is fully written
        ~{{ local_username }}/.tmux/plugins/tpm/scripts/install_plugins.sh
