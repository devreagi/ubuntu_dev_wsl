---
# mount /tmp on tmpfs
- block:
    - name: clear the existing /tmp dir (1/5)
      ansible.builtin.shell: "/bin/rm -rf *"
      args:
        chdir: /tmp

    - name: copy systemd file (2/5)
      ansible.builtin.copy:
        src: /usr/share/systemd/tmp.mount
        dest: /lib/systemd/system/tmp.mount
        remote_src: True

    - name: create dir /etc/systemd/system/tmp.mount.d (3/5)
      ansible.builtin.file:
        path: /etc/systemd/system/tmp.mount.d
        state: directory

    - name: create tmp.mount custom options file (4/5)
      ansible.builtin.copy:
        dest: /etc/systemd/system/tmp.mount.d/options.conf
        content: |
          [Mount]
          Options=mode=1777,strictatime,nosuid,nodev,size=1024M

    - name: start and enable tmp.mount on boot (5/5)
      ansible.builtin.systemd:
        name: tmp.mount
        enabled: true
        state: started
        daemon_reload: true

- block:
    - name: Check if /etc/default/apport exists
      ansible.builtin.stat:
        path: /etc/default/apport
      register: apport_file

    - name: Disable system crash reports
      ansible.builtin.lineinfile:
        dest: /etc/default/apport
        regexp: "^enabled=(0|1)"
        line: enabled=0
        state: present
      when: apport_file.stat.exists

# It may be desirable to set this to zero, so that application memory is retained as long as possible at the expense
# of the page cache. When there is still a memory shortage, the kernel can still use swapping.
- name: tune system swappiness
  ansible.posix.sysctl:
    name: vm.swappiness
    value: "0"
    state: present

- name: reduce space used by journald
  ansible.builtin.lineinfile:
    path: /etc/systemd/journald.conf
    regexp: "^#SystemMaxUse=$"
    line: SystemMaxUse=256M

- name: perform a dist upgrade
  ansible.builtin.apt:
    update_cache: true
    upgrade: dist
    force_apt_get: true

- name: install archiving tools
  ansible.builtin.apt:
    name: "{{ base_archiving_tools }}"
    state: present
    force_apt_get: true

- name: install developer tools
  ansible.builtin.apt:
    name: "{{ base_developer_tools }}"
    state: present
    force_apt_get: true

# Fix for bat syntax highlighting tool; Ubuntu packages it as batcat instead of just bat
- name: create symlink for bat
  ansible.builtin.file:
    src: /usr/bin/batcat
    dest: /usr/bin/bat
    state: link
    force: false

- name: create .ssh dir
  ansible.builtin.file:
    path: "~{{ local_username }}/.ssh"
    state: directory
    mode: "0700"
  become: true
  become_user: "{{ local_username }}"

- name: create .gnupg dir
  ansible.builtin.file:
    path: "~{{ local_username }}/.gnupg"
    state: directory
    mode: "0700"
  become: true
  become_user: "{{ local_username }}"

- name: install download tools
  ansible.builtin.apt:
    name: "{{ base_download_tools }}"
    state: present
    force_apt_get: true

# make fstrim run daily rather than the default weekly schedule for SSD longevity
- block:
    - name: enable fstrim.timer
      ansible.builtin.systemd:
        name: fstrim.timer
        state: started
        enabled: true

    - name: create systemd fstrim.timer override dir
      ansible.builtin.file:
        path: /etc/systemd/system/fstrim.timer.d
        state: directory
        owner: root
        group: root
        mode: 0755

    - name: create override.conf file for fstrim.timer
      ansible.builtin.copy:
        src: etc/systemd/system/fstrim.timer.d/override.conf
        dest: /etc/systemd/system/fstrim.timer.d/override.conf
        owner: root
        group: root
        mode: 0644

    - name: force systemd to reread configs
      ansible.builtin.systemd:
        daemon_reload: true
